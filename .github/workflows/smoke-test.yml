name: Smoke Test

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build builder image
      run: sudo docker build -t ipft-builder:latest .

    - name: Build ipft binary with builder
      run: DOCKER_IMAGE=ipft-builder VERSION=latest sudo -E ./scripts/make.sh

    - name: Save builder image
      run: sudo docker image save ipft-builder > ipft-builder.tar

    - name: Upload builder image for later use
      uses: actions/upload-artifact@v3
      with:
        name: ipft-builder.tar
        path: ipft-builder.tar

    - name: Upload ipft binary for later use
      uses: actions/upload-artifact@v3
      with:
        name: ipft
        path: src/ipft

  check_format:
    runs-on: ubuntu-latest
    needs: build_binary
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download builder image
      uses: actions/download-artifact@v3
      with:
        name: ipft-builder.tar
        path: ipft-builder.tar

    - name: Import builder image
      run: sudo docker image import ipft-builder.tar

    - name: Run format check
      run: |
        DOCKER_IMAGE=ipft-builder VERSION=latest sudo -E ./scripts/make.sh format
        ./scripts/format.sh check_diff

  check_docs:
    runs-on: ubuntu-latest
    needs: build_binary
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download ipft binary
      uses: actions/download-artifact@v3
      with:
        name: ipft
        path: src/ipft

    - name: Set ipft permission
      run: chmod 755 src/ipft

    - name: Check docs
      run: ./scripts/docs.sh check_diff

  run_with_minimum_kernel:
    runs-on: macos-latest
    needs: build_binary
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download ipft binary
      uses: actions/download-artifact@v3
      with:
        name: ipft

    - name: Boot Rocky Linux 8
      run: |
        cp ./tests/Vagrantfile.rocky-linux8 ./Vagrantfile
        vagrant up

    - name: Display kernel version
      run: vagrant ssh -- "/bin/sh -c 'uname -a'"

    - name: Move ipft binary to executable path
      run: vagrant ssh -- "/bin/sh -c 'cd /vagrant && chmod +x ipft && sudo mv ipft /usr/bin'"

    - name: Install required packages
      run: |
        vagrant ssh -- "/bin/sh -c 'sudo dnf -y install jq nc clang make elfutils-libelf-devel'"
        vagrant ssh -- "/bin/sh -c 'curl -OL https://github.com/libbpf/libbpf/archive/refs/tags/v1.1.0.tar.gz'"
        vagrant ssh -- "/bin/sh -c 'tar xf v1.1.0.tar.gz && sudo make -C libbpf-1.1.0/src install'"

    - name: Run smoke test
      timeout-minutes: 5
      run: vagrant ssh -- "/bin/sh -c 'cd /vagrant && sudo ./tests/smoke-test.sh function'"

  run_with_maximum_kernel:
    runs-on: macos-latest
    needs: build_binary
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download ipft binary
      uses: actions/download-artifact@v3
      with:
        name: ipft

    - name: Boot Arch Linux
      run: |
        cp ./tests/Vagrantfile.archlinux-latest ./Vagrantfile
        vagrant up

    - name: Display kernel version
      run: vagrant ssh -- "/bin/sh -c 'uname -a'"

    - name: Move ipft binary to executable path
      run: vagrant ssh -- "/bin/sh -c 'cd /vagrant && chmod +x ipft && sudo mv ipft /usr/bin'"

    - name: Install required packages
      run: |
        vagrant ssh -- "/bin/sh -c 'yes | sudo pacman -S jq gnu-netcat clang libbpf'"

    - name: Run smoke test
      timeout-minutes: 20  # function_graph tracing takes time for detaching
      run: |
        vagrant ssh -- "/bin/sh -c 'cd /vagrant && sudo ./tests/smoke-test.sh function function_graph'"
